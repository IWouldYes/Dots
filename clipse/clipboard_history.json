{"clipboardHistory":[{"value":"\"workspaces\": {\n    \"disable-scroll\": true,\n    \"all-outputs\": false,\n    \"format\": \"{name}\"\n  },\n\n\"clock\": {\n\t\"interval\": 60,\n\t\"format\": \"{:%H:%M}\",\n\t\"max-length\": 30,\n\t\"format-alt\":\"{:%A %d/%m/%Y}\"\n\t},\n\"battery\": {\t\n\t\"interval\": 60,\n\t\"states\": {\n\t\t\"warning\": 30,\n\t\t\"critical\": 15\n\t},\n\t\"events\": {\n\t\t\"on-discharging-warning\": \"notify-send -u normal 'Low Battery'\",\n\t\t\"on-discharging-critical\": \"notify-send -u critical 'Very Low Battery'\",\n\t\t\"on-charging-100\": \"notify-send -u normal 'Battery Full!'\"\n\t},\n\t\"format\": \"{capacity}%\",\n\t\"format-icons\": [\"ÔâÑ\", \"ÔâÉ\", \"ÔâÇ\", \"ÔâÅ\", \"ÔâÄ\"],\n   \"format-charging\": \"+{capacity}%\",\n\t\"max-length\": 25\n\t},\n\"network\": {\n\t\"format\": \"{ifname}\",\n\t\"format-wifi\": \"{essid} {signalStrength} \",\n\t\"format-ethernet\": \"{ifname} ÔÉÅ\",\n\t\"format-disconnected\": \"\", //An empty format will hide the module.\n\t\"max-length\": 50\n},\n\"window\": {\n\t\"format\": \"{app_id}\",\n\t\"max-length\": 50,\n},\n \"temperature\": {\n    \"thermal-zone\": 2,\n    \"hwmon-path\": \"/sys/class/hwmon/hwmon2/temp1_input\",\n    \"critical-threshold\": 80,\n    \"format-critical\": \"{temperatureC}¬∞C Ôãá\",\n    \"format\": \"{temperatureC}\"\n},\n\"pulseaudio\": {\n\t\"format\": \"{volume}% {icon}\",\n\t\"format-bluetooth\": \"{volume}% {icon}Ôäî\",\n\t\"format-muted\": \"mut\",\n\t\"format-icons\": {\n\t\t\"alsa_output.pci-0000_00_1f.3.analog-stereo\": \"\",\n\t\t\"alsa_output.pci-0000_00_1f.3.analog-stereo-muted\": \"mut\",\n\t\t\"headphones\": \"ÔÄ•\",\n\t\t\"handsfree\": \"Ôñê\",\n\t\t\"headset\": \"headset\",\n\t\t\"phone\": \"ÔÇï\",\n\t\t\"phone-muted\": \"Ó¥ó\",\n\t\t\"portable\": \"ÔÇï\",\n\t\t\"car\": \"ÔÜπ\",\n\t\t\"default\": [\"ÔÄß\", \"ÔÄ®\"]\n\t},\n\t\"scroll-step\": 1,\n\t\"on-click\": \"pavucontrol\"\n}\n","recorded":"2025-09-17 22:01:00.289997081","filePath":"null","pinned":false},{"value":"\"workspaces\",\"window\",\"pulseaudio\",\"temperature\",\"network\",\"battery\",\"clock\"","recorded":"2025-09-17 22:00:39.766129104","filePath":"null","pinned":false},{"value":"monitor=, addreserved, 0, 0, 900, 0\n","recorded":"2025-09-16 11:55:13.043956942","filePath":"null","pinned":false},{"value":"\"sway/workspaces\",\"sway/window\"","recorded":"2025-09-16 11:52:34.920852010","filePath":"null","pinned":false},{"value":"  padding-left:1000px;\n","recorded":"2025-09-16 11:51:43.052355302","filePath":"null","pinned":false},{"value":"  padding-left:1600px;\n","recorded":"2025-09-16 11:51:29.349921437","filePath":"null","pinned":false},{"value":"exec-once = ./blacsquar.sh\n","recorded":"2025-09-16 11:44:00.310492671","filePath":"null","pinned":false},{"value":"monitor = eDP-1, 960x1080, addreserved, 0, 0, 960, 0\n","recorded":"2025-09-16 11:43:53.539141520","filePath":"null","pinned":false},{"value":"@60","recorded":"2025-09-16 11:42:22.744979898","filePath":"null","pinned":false},{"value":" 0x0, 1","recorded":"2025-09-16 11:41:56.045074522","filePath":"null","pinned":false},{"value":"exec-once = alacritty --class LeftBar --title LeftBar -e bash -c \"while :; do sleep 9999; done\"\n# Make LeftBar always floating, pinned, non-focusable\nwindowrulev2 = float,class:^(LeftBar)$\nwindowrulev2 = pinned,class:^(LeftBar)$\nwindowrulev2 = noborder,class:^(LeftBar)$\nwindowrulev2 = noanim,class:^(LeftBar)$\nwindowrulev2 = sticky,class:^(LeftBar)$\nwindowrulev2 = focusable:false,class:^(LeftBar)$\nwindowrulev2 = size 960 1080,class:^(LeftBar)$\nwindowrulev2 = move 0 0,class:^(LeftBar)$\n\n","recorded":"2025-09-16 11:38:34.260572418","filePath":"null","pinned":false},{"value":"monitor = eDP-1, 1920x1080@60, 0x0, 1\n","recorded":"2025-09-16 11:37:34.827723856","filePath":"null","pinned":false},{"value":"windowrulev2 = size 960 1080,class:^(LeftBar)$\nwindowrulev2 = move 0 0,class:^(LeftBar)$\n","recorded":"2025-09-16 11:31:53.670373697","filePath":"null","pinned":false},{"value":"# Make LeftBar always floating, pinned, non-focusable\nwindowrulev2 = float,class:^(LeftBar)$\nwindowrulev2 = pinned,class:^(LeftBar)$\nwindowrulev2 = noborder,class:^(LeftBar)$\nwindowrulev2 = noanim,class:^(LeftBar)$\nwindowrulev2 = sticky,class:^(LeftBar)$\nwindowrulev2 = focusable:false,class:^(LeftBar)$\n","recorded":"2025-09-16 11:31:33.401639193","filePath":"null","pinned":false},{"value":"tail -f ~/.local/share/hypr/hyprland/hyprland.log\n","recorded":"2025-09-16 11:25:30.904098084","filePath":"null","pinned":false},{"value":"# Autostart Alacritty as left bar\nexec-once = alacritty --class LeftBar --title LeftBar -e bash -c \"while :; do sleep 9999; done\"\n","recorded":"2025-09-16 11:18:16.257414832","filePath":"null","pinned":false},{"value":"kitty --override 'window_padding_width=0' \\\n      --override 'background=#222' \\\n      --class LeftBar \\\n      --title LeftBar \\\n      --hold \\\n      bash -c \"while :; do sleep 9999; done\"\n","recorded":"2025-09-16 11:16:28.206031779","filePath":"null","pinned":false},{"value":";; eww widget for Hyprland ‚Äî top-left system peek using polling variables\n;; Save as ~/.config/eww/top_left.yuck and run:\n;; eww daemon \u0026\n;; eww open top-left\n\n;; Polling variables\n;; CPU calculation using /proc/stat: use total and idle deltas for more accurate usage\n(defpoll cpu :interval \"2s\" :initial \"Loading...\" `bash -c 'prev_total=0; prev_idle=0; while true; do read cpu user nice system idle iowait irq softirq steal guest guest_nice \u003c /proc/stat; total=$((user+nice+system+idle+iowait+irq+softirq+steal)); diff_total=$((total-prev_total)); diff_idle=$((idle-prev_idle)); cpu_usage=0; if [ $diff_total -ne 0 ]; then cpu_usage=$((100*(diff_total-diff_idle)/diff_total)); fi; echo ${cpu_usage}%; prev_total=$total; prev_idle=$idle; sleep 2; done`)\n\n;; RAM usage with correct awk syntax\n(defpoll ram :interval \"3s\" :initial \"Loading...\" `free -m | awk 'NR==2{printf(\"%d/%dMB (%d%%)\", $3,$2,$3*100/$2)}'`)\n\n(defpoll ip :interval \"10s\" :initial \"Loading...\" `ip -4 addr show scope global | grep -oP \"(?\u003c=inet\\\\s)\\\\d+(\\\\.\\\\d+){3}\" | head -n1 || hostname -I | awk '{print $1}'`)\n(defpoll date :interval \"30s\" :initial \"Loading...\" `date '+%a %d %b %Y %H:%M'`)\n\n(defwindow top-left\n  :monitor 0\n  :geometry (geometry :x \"0%\" :y \"20px\" :width \"260px\" :height \"120px\" :anchor \"top left\")\n  :stacking \"fg\"\n  :windowtype \"dock\"\n  :wm-ignore false\n  :sticky true\n  (box :orientation \"vertical\" :spacing 8 :margin \"8px\"\n\n    ;; CPU line\n    (box :orientation \"horizontal\" :spacing 6 :halign \"start\"\n      (label :text \"CPU:\" :class \"key\" :valign \"center\")\n      (label :text \"${cpu}\")\n    )\n\n    ;; RAM line\n    (box :orientation \"horizontal\" :spacing 6 :halign \"start\"\n      (label :text \"RAM:\" :class \"key\" :valign \"center\")\n      (label :text \"${ram}\")\n    )\n\n    ;; Local IP line\n    (box :orientation \"horizontal\" :spacing 6 :halign \"start\"\n      (label :text \"IP:\" :class \"key\" :valign \"center\")\n      (label :text \"${ip}\")\n    )\n\n    ;; Date + button to open calendar\n    (box :orientation \"horizontal\" :spacing 6 :halign \"start\"\n      (label :text \"Date:\" :class \"key\" :valign \"center\")\n      (label :text \"${date}\")\n      (button :label \"üìÖ\" :on_click \"eww toggle calendar\" :class \"icon-btn\")\n    )\n  )\n)\n\n(defwindow calendar\n  :monitor 0\n  :geometry (geometry :x \"0%\" :y \"148px\" :width \"260px\" :height \"280px\" :anchor \"top left\")\n  :stacking \"fg\"\n  :windowtype \"dock\"\n  :wm-ignore false\n  :sticky true\n  (box :orientation \"vertical\" :margin \"8px\"\n    (calendar)\n    (button :label \"Close\" :on_click \"eww close calendar\" :class \"close-btn\")\n  )\n)\n\n;; Basic styling\n;; .panel { background: rgba(30,30,30,0.8); border-radius: 8px; padding: 6px; }\n;; .key { font-weight: 600; }\n;; .icon-btn { padding: 2px 6px; }\n;; .close-btn { margin-top: 6px; }\n","recorded":"2025-09-16 11:14:25.844832033","filePath":"null","pinned":false},{"value":"(defwindow leftbar\n  :geometry (geometry :x \"0\" :y \"0\" :width \"960px\" :height \"100%\")\n  :stacking \"fg\"\n  :exclusive false\n  (box :class \"leftbar\"))\n\n","recorded":"2025-09-16 11:14:09.531076594","filePath":"null","pinned":false},{"value":", transform.crop 960 0 960 1080\n\n","recorded":"2025-09-16 11:11:45.673018597","filePath":"null","pinned":false},{"value":"#!/bin/bash\n# Replace this with whatever tool you have; hypothetical command\noverlay_tool --geometry 960x1080+0+0 --color black --always-on-top --borderless\n","recorded":"2025-09-15 23:07:34.637398367","filePath":"null","pinned":false},{"value":"monitor = eDP-1, modeline 86.00 960 1040 1120 1920 1080 1083 1093 1120 -hsync +vsync, 0x0, 1\n\n\n\n\n\nwindowrule = *,.* transform.crop 960 0 960 1080","recorded":"2025-09-15 23:06:17.153193726","filePath":"null","pinned":false},{"value":"monitor = eDP-1, 1920x1080@60, 0x0, 1, transform.crop 960 0 960 1080\n","recorded":"2025-09-15 23:06:14.535459352","filePath":"null","pinned":false},{"value":"\n","recorded":"2025-09-15 23:06:07.112353685","filePath":"null","pinned":false},{"value":"windowrule = *,.* transform.crop 960 0 960 1080\n","recorded":"2025-09-15 23:06:04.768213688","filePath":"null","pinned":false},{"value":"monitor = eDP-1, modeline 86.00 960 1040 1120 1920 1080 1083 1093 1120 -hsync +vsync, 0x0, 1","recorded":"2025-09-15 23:05:05.066539395","filePath":"null","pinned":false},{"value":"monitor = eDP-1, modeline 86.00 960 1040 1120 1920 1080 1083 1093 1120 -hsync +vsync, 0x0, 1\n","recorded":"2025-09-15 23:05:03.087701181","filePath":"null","pinned":false},{"value":"monitor = eDP-1, modeline 86.00 960 1024 1120 1280 1080 1083 1093 1120 -hsync +vsync, 0x0, 1","recorded":"2025-09-15 23:04:42.827203893","filePath":"null","pinned":false},{"value":"monitor = eDP-1, modeline 86.00 960 1024 1120 1920 1080 1083 1093 1120 -hsync +vsync, 0x0, 1","recorded":"2025-09-15 23:03:59.050693089","filePath":"null","pinned":false},{"value":"monitor = eDP-1, modeline 86.00 960 1024 1120 1280 1080 1083 1093 1120 -hsync +vsync, 0x0, 1\n","recorded":"2025-09-15 23:03:48.489569063","filePath":"null","pinned":false},{"value":"monitor = eDP-1, modeline 86.00 960 1024 1120 1920 1080 1083 1093 1120 -hsync +vsync, 0x0, 1\n","recorded":"2025-09-15 23:03:12.285627374","filePath":"null","pinned":false},{"value":"user@~  $ modeline 86.00 960 1024 1120 1920 1080 1083 1093 1120 -hsync +vsync\n\nzsh: command not found: modeline\nuser@~  $","recorded":"2025-09-15 23:02:59.982845991","filePath":"null","pinned":false},{"value":"modeline 86.00 960 1024 1120 1920 1080 1083 1093 1120 -hsync +vsync\n","recorded":"2025-09-15 23:02:44.904756340","filePath":"null","pinned":false},{"value":"monitor = DP-1, modeline 1071.101 3840 3848 3880 3920 2160 2263 2271 2277 +hsync -vsync, 0x0, 1","recorded":"2025-09-15 23:02:26.089209989","filePath":"null","pinned":false},{"value":"hyprctl monitors\n","recorded":"2025-09-15 23:02:04.464922202","filePath":"null","pinned":false},{"value":"Modeline \"960x1080_60.00\" 86.00  960 1024 1120 1280  1080 1083 1093 1120 -hsync +vsync\n","recorded":"2025-09-15 23:02:01.400466058","filePath":"null","pinned":false},{"value":"user@~  $ cvt 960 1080 60\n# 960x1080 59.99 Hz (CVT) hsync: 67.19 kHz; pclk: 86.00 MHz\nModeline \"960x1080_60.00\"   86.00  960 1024 1120 1280  1080 1083 1093 1120 -hsync +vsync\nuser@~  $  ","recorded":"2025-09-15 23:01:49.917635648","filePath":"null","pinned":false},{"value":"gtf 960 1080 60\n","recorded":"2025-09-15 22:57:34.792311012","filePath":"null","pinned":false},{"value":"monitor = DP-1, modeline 1071.101 3840 3848 3880 3920 2160 2263 2271 2277 +hsync -vsync, 0x0, 1\n","recorded":"2025-09-15 22:55:21.435106833","filePath":"null","pinned":false},{"value":"cvt 1920 1080 60\n# or gtf\n","recorded":"2025-09-15 22:54:59.944723294","filePath":"null","pinned":false},{"value":"https://wiki.hypr.land/Configuring/Monitors/\n","recorded":"2025-09-14 13:58:34.137903835","filePath":"null","pinned":false},{"value":", addreserved, 0,0,960,0","recorded":"2025-09-14 13:57:47.971103032","filePath":"null","pinned":false},{"value":"intellij-idea-community-edition","recorded":"2025-09-12 09:37:36.169776443","filePath":"null","pinned":false},{"value":"while true; do\n    yad --text=\"CPU: $(grep 'cpu ' /proc/stat | awk '{usage=($2+$4)*100/($2+$4+$5)} END {print usage\"%\"}')\"\n    sleep 1\ndone\n","recorded":"2025-09-12 09:29:30.023512925","filePath":"null","pinned":false},{"value":"sudo pacman -S terminus-font\n","recorded":"2025-09-12 09:28:23.820982484","filePath":"null","pinned":false},{"value":"user@~  $ conky                                                                   [9:28:01 ]\nconky: desktop window (0x400) is root window\nconky: drawing to desktop window\nconky: forked to background, pid is 3715\nuser@~  $                                                                         [9:28:02 ]\nconky: FOUND: wayland\nconky: FOUND: x11\nconky: FOUND: file\nconky: FOUND: ncurses\nconky: FOUND: console\nconky: can't load font '6x10'\nconky: can't load font '6x10'\nconky: 'unknown' wayland session running","recorded":"2025-09-12 09:28:10.032995204","filePath":"null","pinned":false},{"value":"conky.config = {\n    alignment = 'top_right',\n    background = true,\n    update_interval = 1.0\n}\n\nconky.text = [[\nCPU: ${cpu}%\nRAM: ${mem}/${memmax}\nTime: ${time %H:%M:%S}\n]]\n","recorded":"2025-09-12 09:27:08.575781255","filePath":"null","pinned":false},{"value":"vim.g.user_emmet_expandabbr_key = '\u003cC-e\u003e'\n","recorded":"2025-09-12 09:05:51.532134187","filePath":"null","pinned":false},{"value":"https://github.com/mattn/emmet-vim.git","recorded":"2025-09-12 09:05:16.995562159","filePath":"null","pinned":false},{"value":"git clone https://github.com/mattn/emmet-vim.git ~/.config/nvim/pack/plugins/start/emmet-vim\n","recorded":"2025-09-12 09:05:11.491118360","filePath":"null","pinned":false},{"value":"vim.lsp.enable('pyright')","recorded":"2025-09-12 09:01:49.016281449","filePath":"null","pinned":false},{"value":"npm i -g pyright","recorded":"2025-09-12 09:01:06.419865915","filePath":"null","pinned":false},{"value":"https://aur.archlinux.org/packages/powershell-bin","recorded":"2025-09-11 10:04:02.685141421","filePath":"null","pinned":false},{"value":"can i set synology photos to use different folder than what it normally uses?since i cant even change its name to polish alt and i see Photos instead of zdjƒôcia on windows","recorded":"2025-09-08 20:04:54.324168021","filePath":"null","pinned":false},{"value":"why is there home and homes","recorded":"2025-09-08 19:04:00.624898833","filePath":"null","pinned":false},{"value":"üì∑ 12506-113582797.png","recorded":"2025-09-08 19:03:52.118916742","filePath":"/home/user/.config/clipse/tmp_files/12506-113582797.png","pinned":false},{"value":"üì∑ 9349-202469067.png","recorded":"2025-09-08 18:56:57.206095152","filePath":"/home/user/.config/clipse/tmp_files/9349-202469067.png","pinned":false},{"value":"Username + password of your NAS account.","recorded":"2025-09-08 18:54:03.069853754","filePath":"null","pinned":false},{"value":"üì∑ 2321503-379884487.png","recorded":"2025-09-08 18:23:43.018031678","filePath":"/home/user/.config/clipse/tmp_files/2321503-379884487.png","pinned":false},{"value":"üì∑ 10284-389700356.png","recorded":"2025-09-08 17:53:46.397052503","filePath":"/home/user/.config/clipse/tmp_files/10284-389700356.png","pinned":false},{"value":"\"pulseaudio\": {\n\t\"format\": \"{volume}% {icon}\",\n\t\"format-bluetooth\": \"{volume}% {icon}Ôäî\",\n\t\"format-muted\": \"ÔÄ¶\",\n\t\"format-icons\": {\n\t\t\"alsa_output.pci-0000_00_1f.3.analog-stereo\": \"Óå≠\",\n\t\t\"alsa_output.pci-0000_00_1f.3.analog-stereo-muted\": \"Óª®Óå≠\",\n\t\t\"headphones\": \"ÔÄ•\",\n\t\t\"handsfree\": \"Ôñê\",\n\t\t\"headset\": \"Ôñê\",\n\t\t\"phone\": \"ÔÇï\",\n\t\t\"phone-muted\": \"Ó¥ó\",\n\t\t\"portable\": \"ÔÇï\",\n\t\t\"car\": \"ÔÜπ\",\n\t\t\"default\": [\"ÔÄß\", \"ÔÄ®\"]\n\t},\n\t\"scroll-step\": 1,\n\t\"on-click\": \"pavucontrol\"\n}","recorded":"2025-09-08 11:20:47.750374734","filePath":"null","pinned":false},{"value":" \"temperature\": {\n    // \"thermal-zone\": 2,\n    // \"hwmon-path\": \"/sys/class/hwmon/hwmon2/temp1_input\",\n    // \"critical-threshold\": 80,\n    // \"format-critical\": \"{temperatureC}¬∞C Ôãá\",\n    \"format\": \"{temperatureC}¬∞C Ôãâ\"\n}","recorded":"2025-09-08 11:15:47.657102904","filePath":"null","pinned":false},{"value":"using System;\n\npublic class zadanie\n{\n\tpublic static void Main(string[] args)\n\t{\n\t\t//1\n\t\tSamochod s_1 = new Samochod();\n\t\ts_1.uruchom();\n\t\ts_1.set_przebieg(2136.7f);\n\t\tConsole.WriteLine(s_1.get_przebieg());\n\t\t//2\n\t\tSamochod s_2 = new Samochod();\n\t\ts_2.uruchom();\n\t\ts_2.set_przebieg(3214.2f);\n\t\tConsole.WriteLine(s_2.get_przebieg());\n\t\t//3\n\t\tSamochod s_3 = new Samochod();\n\t\ts_3.uruchom();\n\t\ts_3.set_przebieg(145.4f);\n\t\tConsole.WriteLine(s_3.get_przebieg());\n      int[] tab = new int[100];\n      for(int i=1;i\u003c=100;i++){\n         tab[i-1]=i;\n         Console.Write(tab[i-1]+\";\");\n      }\n      Console.WriteLine(); \n      \n      //reverse\n      for(int i=0;i\u003c100;i++){\n         tab[i]=100-i;\n         Console.Write(tab[i]+\";\");\n      }\n      Console.WriteLine();\n\n      //parzyste\n      for(int i=0;i\u003c100;i++){\n         if (tab[i]%2==0){\n            Console.Write(tab[i]+\";\");   \n         }\n      }\n      \n      //nieparzyste\n      for(int i=0;i\u003c100;i++){\n         if (tab[i]%2==1){\n            Console.Write(tab[i]+\";\");   \n         }\n      }\n\n\n      //pierwsze\n      for(int i=0;i\u003c100;i++){\n         int dzielniki_count = 0;\n         for(int j=1;j\u003ctab[i]+1;j++){\n            if (tab[i]%j!=0){\n               //Console.WriteLine(tab[i]+\"%\"+j+\"=\"+tab[i]%j); \n            }\n            else{\n               //Console.WriteLine(i+\"%\"+j+\"=\"+i%j+\" h\");\n               dzielniki_count++;\n            }\n         }\n         if (dzielniki_count==2){\n            Console.WriteLine(tab[i]);   \n         }\n\n      }\n      \n\n\n      //tablica 2d\n      string[,] tab2 = new string[10,10];\n      for(int i=0;i\u003c10;i++){\n         for(int j=0;j\u003c10;j++){\n            if(i%2==0)\n               tab2[i,j]+=\"P\";\n            else\n               tab2[i,j]+=\"N\";\n            if(j%2==0)\n               tab2[i,j]+=\"P\";\n            else\n               tab2[i,j]+=\"N\";\n            Console.Write(tab2[i,j]+\" \");\n         }\n         Console.WriteLine();\n      }\n      bool czy_pierwsza(int i){\n         int dzielniki_count = 0;\n         for(int j=1;j\u003ci+1;j++){\n            if (i%j!=0){\n               //Console.WriteLine(tab[i]+\"%\"+j+\"=\"+tab[i]%j); \n            }\n            else{\n               //Console.WriteLine(i+\"%\"+j+\"=\"+i%j+\" h\");\n               dzielniki_count++;\n            }\n         }\n         if (dzielniki_count==2){\n            return true;   \n         }\n         return false;\n      }\n\n      //tablice 3d\n      string[,,] tab3 = new string[10,10,10];\n      for(int i=0;i\u003c10;i++){\n         int suma = 0;\n         for(int j=0;j\u003c10;j++){\n            for(int k=0;k\u003c10;k++){\n               suma = j+k+i;\n               if(isfib(suma)){\n                  Console.Write(\"FI\");\n               }\n               else if (czy_pierwsza(suma))\n                  Console.Write(\"PR\");\n               else if (suma%2==0)\n                  Console.Write(\"PA\");\n               else\n                  Console.Write(\"NP\");\n               \n               Console.Write(\"[\"+i+\",\"+j+\",\"+k+\"]\"+suma);\n               Console.WriteLine();\n            }\n         }\n      }\n      bool isfib(int n){\n         int a=0;\n         int b=1;\n         while (b\u003c=n){\n            if (b==n)\n               return true;\n            int tmp=a+b;\n            a=b;\n            b=tmp;\n         }\n         return false;\n      }     \n      \n      \n   }\n\tpublic class Samochod{\n\t\tstring marka;\n\t\tstring model;\n\t\tfloat pojemnosc;\n\t\tfloat przebieg;\n\t\tbool powypadkowy;\n\t\t\n\t\tpublic void uruchom(){\n\t\t\tConsole.WriteLine(\"Samoch√≥d jest ju≈º uruchomiony\");\n\t\t}\n\t\tpublic float get_przebieg(){\n\t\t\treturn przebieg;\n\t\t}\n\t\tpublic void set_przebieg(float przebieg){\n\t\t\tthis.przebieg = przebieg;\n\t\t}\n\t\tpublic bool get_powypadkowy(){\n\t\t\treturn powypadkowy;\n\t\t}\n\t\tpublic void set_powypadkowy(bool powypadkowy){\n\t\t\tthis.powypadkowy = powypadkowy;\n\t\t}\n\t}\n}","recorded":"2025-09-08 11:03:04.054336241","filePath":"null","pinned":false},{"value":"Console.Write(\"  \");","recorded":"2025-09-08 10:52:41.546873831","filePath":"null","pinned":false},{"value":"using System;\n\npublic class zadanie\n{\n\tpublic static void Main(string[] args)\n\t{\n\t\t//1\n\t\tSamochod s_1 = new Samochod();\n\t\ts_1.uruchom();\n\t\ts_1.set_przebieg(2136.7f);\n\t\tConsole.WriteLine(s_1.get_przebieg());\n\t\t//2\n\t\tSamochod s_2 = new Samochod();\n\t\ts_2.uruchom();\n\t\ts_2.set_przebieg(3214.2f);\n\t\tConsole.WriteLine(s_2.get_przebieg());\n\t\t//3\n\t\tSamochod s_3 = new Samochod();\n\t\ts_3.uruchom();\n\t\ts_3.set_przebieg(145.4f);\n\t\tConsole.WriteLine(s_3.get_przebieg());\n      int[] tab = new int[100];\n      for(int i=1;i\u003c=100;i++){\n         tab[i-1]=i;\n         Console.Write(tab[i-1]+\";\");\n      }\n      Console.WriteLine(); \n      \n      //reverse\n      for(int i=0;i\u003c100;i++){\n         tab[i]=100-i;\n         Console.Write(tab[i]+\";\");\n      }\n      Console.WriteLine();\n\n      //parzyste\n      for(int i=0;i\u003c100;i++){\n         if (tab[i]%2==0){\n            Console.Write(tab[i]+\";\");   \n         }\n      }\n      \n      //nieparzyste\n      for(int i=0;i\u003c100;i++){\n         if (tab[i]%2==1){\n            Console.Write(tab[i]+\";\");   \n         }\n      }\n\n\n      //pierwsze\n      for(int i=0;i\u003c100;i++){\n         int dzielniki_count = 0;\n         for(int j=1;j\u003ctab[i]+1;j++){\n            if (tab[i]%j!=0){\n               //Console.WriteLine(tab[i]+\"%\"+j+\"=\"+tab[i]%j); \n            }\n            else{\n               //Console.WriteLine(i+\"%\"+j+\"=\"+i%j+\" h\");\n               dzielniki_count++;\n            }\n         }\n         if (dzielniki_count==2){\n            Console.WriteLine(tab[i]);   \n         }\n\n      }\n      \n\n\n\n      string[,] tab2 = new string[10,10];\n      for(int i=0;i\u003c10;i++){\n         for(int j=0;j\u003c10;j++){\n            if(i%2==0)\n               tab2[i,j]+=\"P\";\n            else\n               tab2[i,j]+=\"N\";\n            if(j%2==0)\n               tab2[i,j]+=\"P\";\n            else\n               tab2[i,j]+=\"N\";\n            Console.Write(tab2[i,j]+\" \");\n         }\n         Console.WriteLine();\n      }\n      bool czy_pierwsza(int i){\n         int dzielniki_count = 0;\n         for(int j=1;j\u003ci+1;j++){\n            if (i%j!=0){\n               //Console.WriteLine(tab[i]+\"%\"+j+\"=\"+tab[i]%j); \n            }\n            else{\n               //Console.WriteLine(i+\"%\"+j+\"=\"+i%j+\" h\");\n               dzielniki_count++;\n            }\n         }\n         if (dzielniki_count==2){\n            return true;   \n         }\n         return false;\n      }\n      string[,,] tab3 = new string[10,10,10];\n      for(int i=0;i\u003c10;i++){\n         int suma = 0;\n         for(int j=0;j\u003c10;j++){\n            for(int k=0;k\u003c10;k++){\n               suma = j+k+i;\n               if (czy_pierwsza(suma))\n                  Console.Write(\"PR\");\n               else\n                  Console.Write(\"  \");\n               if (suma%2==0)\n                  Console.Write(\"PA\");\n               else\n                  Console.Write(\"NP\");\n               Console.Write(\"[\"+i+\",\"+j+\",\"+k+\"]\"+suma);\n               Console.WriteLine();\n            }\n         }\n      }\n      Console.WriteLine(czy_pierwsza(14));\n      \n      \n   }\n\tpublic class Samochod{\n\t\tstring marka;\n\t\tstring model;\n\t\tfloat pojemnosc;\n\t\tfloat przebieg;\n\t\tbool powypadkowy;\n\t\t\n\t\tpublic void uruchom(){\n\t\t\tConsole.WriteLine(\"Samoch√≥d jest ju≈º uruchomiony\");\n\t\t}\n\t\tpublic float get_przebieg(){\n\t\t\treturn przebieg;\n\t\t}\n\t\tpublic void set_przebieg(float przebieg){\n\t\t\tthis.przebieg = przebieg;\n\t\t}\n\t\tpublic bool get_powypadkowy(){\n\t\t\treturn powypadkowy;\n\t\t}\n\t\tpublic void set_powypadkowy(bool powypadkowy){\n\t\t\tthis.powypadkowy = powypadkowy;\n\t\t}\n\t}\n}","recorded":"2025-09-08 10:48:16.241029674","filePath":"null","pinned":false},{"value":"Console.WriteLine(i);","recorded":"2025-09-08 10:22:26.296314519","filePath":"null","pinned":false},{"value":"for(int j=0;j\u003c10;j++){\n                  if(i%2==0)\n                     tab2[i,j]+=\"P\";\n                  else\n                     tab2[i,j]+=\"N\";\n                  if(j%2==0)\n                     tab2[i,j]+=\"P\";\n                  else\n                     tab2[i,j]+=\"N\";\n                  Console.Write(tab2[i,j]+\" \");\n               }\n               Console.Write();","recorded":"2025-09-08 10:19:47.800127120","filePath":"null","pinned":false},{"value":"int dzielniki_count = 0;\n         for(int j=1;j\u003ctab[i]+1;j++){\n            if (tab[i]%j!=0){\n               //Console.WriteLine(tab[i]+\"%\"+j+\"=\"+tab[i]%j); \n            }\n            else{\n               //Console.WriteLine(i+\"%\"+j+\"=\"+i%j+\" h\");\n               dzielniki_count++;\n            }\n         }\n         if (dzielniki_count==2){\n            Console.WriteLine(tab[i]);   \n         }","recorded":"2025-09-08 10:18:34.053670414","filePath":"null","pinned":false},{"value":"for(int j=0;j\u003c10;j++){\n            if(i%2==0)\n               tab2[i,j]+=\"P\";\n            else\n               tab2[i,j]+=\"N\";\n            if(j%2==0)\n               tab2[i,j]+=\"P\";\n            else\n               tab2[i,j]+=\"N\";\n            Console.Write(tab2[i,j]+\" \");\n         }\n         Console.WriteLine();\n","recorded":"2025-09-08 10:17:41.386010340","filePath":"null","pinned":false},{"value":"    check_ts = true,\n    disable_filetype = { \"TelescopePrompt\", \"vim\" },\n    fast_wrap = {\n        map = \"\u003cM-e\u003e\",\n        chars = { \"{\", \"[\", \"(\", '\"', \"'\" },\n        pattern = string.gsub([[ [%'%\"%)%\u003e%]%)%}%,] ] ,\"%s+\", \"\"),\n        end_key = \"$\",\n        keys = \"qwertyuiopzxcvbnmasdfghjkl\",\n        check_comma = true,\n        highlight = \"Search\",\n        highlight_grey = \"Comment\",\n  ","recorded":"2025-09-08 10:14:03.113487877","filePath":"null","pinned":false},{"value":"require('nvim-autopairs').setup{\n    check_ts = true,            \n    disable_filetype = { \"TelescopePrompt\", \"vim\" },\n    fast_wrap = {           \n        map = \"\u003cM-e\u003e\",\n        chars = { \"{\", \"[\", \"(\", '\"', \"'\" },\n        pattern = string.gsub([[ [%'%\"%)%\u003e%]%)%}%,] ] ,\"%s+\", \"\"),\n        end_key = \"$\",\n        keys = \"qwertyuiopzxcvbnmasdfghjkl\",\n        check_comma = true,\n        highlight = \"Search\",\n        highlight_grey = \"Comment\",\n    },\n}","recorded":"2025-09-08 10:12:52.983582438","filePath":"null","pinned":false},{"value":"require('nvim-autopairs').setup{\n    check_ts = true,\n    disable_filetype = { \"TelescopePrompt\", \"vim\" },\n    fast_wrap = {\n        map = \"\u003cM-e\u003e\",\n        chars = { \"{\", \"[\", \"(\", '\"', \"'\" },\n        pattern = string.gsub([[ [%'%\"%)%\u003e%]%)%}%,] ] ,\"%s+\", \"\"),\n        end_key = \"$\",\n        keys = \"qwertyuiopzxcvbnmasdfghjkl\",\n        check_comma = true,\n        highlight = \"Search\",\n        highlight_grey = \"Comment\",\n    },\n}\n","recorded":"2025-09-08 10:12:42.198494668","filePath":"null","pinned":false},{"value":"--auto-close brackets\nvim.api.nvim_set_keymap(\"i\", \"(\", \"()\u003cLeft\u003e\", { noremap = true })\nvim.api.nvim_set_keymap(\"i\", \"[\", \"[]\u003cLeft\u003e\", { noremap = true })\nvim.api.nvim_set_keymap(\"i\", \"{\", \"{}\u003cLeft\u003e\", { noremap = true })\nvim.api.nvim_set_keymap(\"i\", '\"', '\"\"\u003cLeft\u003e', { noremap = true })\nvim.api.nvim_set_keymap(\"i\", \"'\", \"''\u003cLeft\u003e\", { noremap = true })\n","recorded":"2025-09-08 10:08:28.355638554","filePath":"null","pinned":false},{"value":"https://github.com/windwp/nvim-autopairs.git","recorded":"2025-09-08 10:07:01.652256043","filePath":"null","pinned":false},{"value":" -- optional: wrap selections quickly\n","recorded":"2025-09-08 10:05:39.636849998","filePath":"null","pinned":false},{"value":"-- enable treesitter integration (smart)\n","recorded":"2025-09-08 10:05:37.303893911","filePath":"null","pinned":false},{"value":"-- Load autopairs\n","recorded":"2025-09-08 10:05:32.949516889","filePath":"null","pinned":false},{"value":"-- Load autopairs\nrequire('nvim-autopairs').setup{\n    check_ts = true,        -- enable treesitter integration (smart)\n    disable_filetype = { \"TelescopePrompt\", \"vim\" },\n    fast_wrap = {            -- optional: wrap selections quickly\n        map = \"\u003cM-e\u003e\",\n        chars = { \"{\", \"[\", \"(\", '\"', \"'\" },\n        pattern = string.gsub([[ [%'%\"%)%\u003e%]%)%}%,] ] ,\"%s+\", \"\"),\n        end_key = \"$\",\n        keys = \"qwertyuiopzxcvbnmasdfghjkl\",\n        check_comma = true,\n        highlight = \"Search\",\n        highlight_grey = \"Comment\",\n    },\n}\n","recorded":"2025-09-08 10:04:57.226343063","filePath":"null","pinned":false},{"value":"if(i%2==0)\n               tab2[i][j]+=\"P\";\n            else\n               tab2[i][j]+=\"N\";","recorded":"2025-09-08 10:00:46.927856702","filePath":"null","pinned":false},{"value":"using System;\n\npublic class zadanie\n{\n\tpublic static void Main(string[] args)\n\t{","recorded":"2025-09-08 09:54:12.387817232","filePath":"null","pinned":false},{"value":"-- Auto-close brackets, parentheses, quotes\nvim.api.nvim_set_keymap(\"i\", \"(\", \"()\u003cLeft\u003e\", { noremap = true })\nvim.api.nvim_set_keymap(\"i\", \"[\", \"[]\u003cLeft\u003e\", { noremap = true })\nvim.api.nvim_set_keymap(\"i\", \"{\", \"{}\u003cLeft\u003e\", { noremap = true })\nvim.api.nvim_set_keymap(\"i\", '\"', '\"\"\u003cLeft\u003e', { noremap = true })\nvim.api.nvim_set_keymap(\"i\", \"'\", \"''\u003cLeft\u003e\", { noremap = true })\n","recorded":"2025-09-08 09:52:00.992175480","filePath":"null","pinned":false},{"value":"               Console.WriteLine(i+\"%\"+j+\"=\"+i%j+\" h\");\n","recorded":"2025-09-08 09:43:34.186621538","filePath":"null","pinned":false},{"value":"               Console.WriteLine(i+\"%\"+j+\"=\"+i%j); \n","recorded":"2025-09-08 09:39:41.508040913","filePath":"null","pinned":false},{"value":"how to now display the number ifs its first:\n//pierwsze\n      for(int i=0;i\u003c100;i++){\n         for(int j=2;j\u003ci;j++){\n            if (i%j!=0){\n            }\n            else{\n               break;\n            }\n         }\n\n      }","recorded":"2025-09-08 09:35:34.286858846","filePath":"null","pinned":false},{"value":"//pierwsze\n      for(int i=0;i\u003c100;i++){\n         for(int j=2;j\u003ci;j++){\n            if (i%j!=0){\n            }\n            else{\n               break;\n            }\n         }\n\n      }","recorded":"2025-09-08 09:31:51.704826088","filePath":"null","pinned":false},{"value":"Console.WriteLine(i+\"%\"+j+\"=\"+i%j+\" h\");","recorded":"2025-09-08 09:27:54.080773187","filePath":"null","pinned":false},{"value":"Console.WriteLine(example+\"%\"+j+\"=\"+example%j);\n","recorded":"2025-09-08 09:20:49.120947213","filePath":"null","pinned":false},{"value":"//parzyste\n      for(int i=0;i\u003c100;i++){\n         if (tab[i]%2==0){\n            Console.Write(tab[i]+\";\");   \n         }\n      }","recorded":"2025-09-08 09:13:14.877938071","filePath":"null","pinned":false},{"value":"-- setup indent-blankline\n","recorded":"2025-09-08 08:57:06.400427233","filePath":"null","pinned":false},{"value":"-- setup indent-blankline\nrequire(\"ibl\").setup {\n    indent = { char = \"‚îÇ\" },\n}\n\n","recorded":"2025-09-08 08:56:58.184624804","filePath":"null","pinned":false},{"value":"-- setup indent-blankline\nrequire(\"ibl\").setup {\n    indent = { char = \"‚îÇ\" },\n}\n\n-- change the color\nvim.cmd [[\n  highlight IndentBlanklineChar guifg=#5c5c5c gui=nocombine\n  highlight IndentBlanklineContextChar guifg=#ff5c57 gui=nocombine\n]]\n","recorded":"2025-09-08 08:56:21.059722905","filePath":"null","pinned":false},{"value":"https://github.com/lukas-reineke/indent-blankline.nvim.git","recorded":"2025-09-08 08:54:21.762712951","filePath":"null","pinned":false},{"value":"-- spaces as 3\nvim.opt.expandtab = true\nvim.opt.tabstop = 3\nvim.opt.shiftwidth = 3\nvim.opt.softtabstop = 3\n\n-- indent guides\nrequire(\"ibl\").setup {\n  indent = { char = \"‚îÇ\" },\n}\n","recorded":"2025-09-08 08:53:44.637063639","filePath":"null","pinned":false},{"value":"-- Spaces instead of tabs\nvim.opt.expandtab = true\n-- Tab = 3 spaces\nvim.opt.tabstop = 3\nvim.opt.shiftwidth = 3\nvim.opt.softtabstop = 3\n","recorded":"2025-09-08 08:50:33.857478393","filePath":"null","pinned":false},{"value":" briefly","recorded":"2025-09-08 08:49:40.036115779","filePath":"null","pinned":false},{"value":"Samochod 1_ = new Samochod();\n\t\t1_.uruchom();\n\t\t1_.set_przebieg(2136.7);\n\t\tConsole.WriteLine(1_.get_przebieg());\n","recorded":"2025-09-08 08:43:51.959082137","filePath":"null","pinned":false},{"value":"using System;\n\nnamespace MyApp\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            Console.WriteLine(\"Hello OOP style!\");\n        }\n    }\n}\n","recorded":"2025-09-08 08:22:22.445557737","filePath":"null","pinned":false},{"value":"#89b4fa","recorded":"2025-09-06 17:12:42.048252345","filePath":"null","pinned":false},{"value":"OTE2OTU4ODg4NjE0NTkyNTIy.G0NLXH.QbkElNrMtyDWxmIQLGrZoQmfsFW8vwWlr0ZF5c","recorded":"2025-09-05 09:14:17.494389880","filePath":"null","pinned":true},{"value":"\"NjEzNzk4NzEyMDI3OTA2MDY5.GZHqKy.VhYI9VZ6jSum852nLH7TBGR7uB-Pm6pDqgJetk\"","recorded":"2025-09-04 10:51:59.958266714","filePath":"null","pinned":true}]}